
@{
    ViewBag.Title = "RADA Logistics - Container Details";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://unpkg.com/lucide@latest"></script>

<style>

    body {
        /*background-image: url('../pictures/4857390.jpg');
        background-size: cover;*/ /* Hace que la imagen cubra toda la pantalla */
        /*background-position: center center;*/ /* Centra la imagen */
        /*background-attachment: fixed;*/ /* Hace que la imagen no se desplace al hacer scroll */
        /*height: 100vh;*/ /* Asegura que el fondo cubra toda la altura de la ventana */
        /*margin: 0;*/ /* Elimina los márgenes predeterminados */
        font-size: 15px;
    }


    .responsive-table {
        list-style-type: none;
        padding: 0;
        margin: 20px 0;
        width: 100%;
        font-size: 14px;
    }

    .table-header, .table-row {
        display: flex;
        padding: 10px 15px;
        border-bottom: 1px solid #dee2e6;
        border-radius: 8px;
        margin-bottom: 5px;
        background-color: #f8f9fa;
    }

    .table-header {
        font-weight: bold;
        background-color: #132C49;
        color: white;
    }

    .table-row:hover {
        background-color: #f1f1f1;
    }

    .table-row > div, .table-header > div {
        flex: 1;
        text-align: center;
    }

    .badge-status {
        font-size: 0.95em;
        padding: 0.4em 0.6em;
        border-radius: 0.5rem;
    }

    .card-body, .card h6, .card p {
        font-size: 14px;
    }

    .col-md-6, .col-md-12 {
        font-size: 14px;
    }

    .responsive-table {
        list-style-type: none;
        padding: 0;
        margin: 20px 0;
        width: 100%;
    }

    .table-header, .table-row {
        display: flex;
        padding: 10px 15px;
        border-bottom: 1px solid #dee2e6;
        border-radius: 8px;
        margin-bottom: 5px;
        background-color: #f8f9fa;
        font-size: 0.95rem;
    }

    .table-header {
        font-weight: bold;
        background-color: #363F4A;
        color: white;
    }

    .table-row:hover {
        background-color: #f1f1f1;
    }

    .table-row > div, .table-header > div {
        flex: 1;
        text-align: center;
    }

    .badge-status {
        font-size: 0.9em;
        padding: 0.4em 0.6em;
        border-radius: 0.5rem;
    }
</style>

<input hidden="hidden" readonly="@true" value="@ViewBag.mot" />

<div class="container mt-5">

    @{
        string motValue = ViewBag.mot as string;
        string actionName = string.IsNullOrEmpty(motValue) ? "RequestContainer" : (motValue == "YES" ? "HRecord" : "RequestContainer");
        string controllerName = string.IsNullOrEmpty(motValue) ? "HISENSE" : (motValue == "YES" ? "History" : "HISENSE");
        var backUrl = Url.Action(actionName, controllerName);
    }

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i data-lucide="truck"></i> Container Details</h2>
        <a href="@backUrl" class="btn btn-outline-secondary">
            <i data-lucide="arrow-left-circle"></i> Volver
        </a>
    </div>

    <div class="card shadow rounded-4 border-0 mb-4">
        <div class="card-body px-4 py-3">
            <div class="row g-3">

                <div class="col-md-6"><strong>Container:</strong> @ViewBag.Container</div>
                <div class="col-md-6">
                    <strong>State:</strong>
                    @if (ViewBag.Status == "Entregado")
                    {
                        <span class="badge bg-success">Entregado</span>
                    }
                    else if (ViewBag.Status == "Pendiente")
                    {
                        <span class="badge bg-warning text-dark">Pendiente</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">@ViewBag.Status</span>
                    }
                </div>
                <div class="col-md-6"><strong>Request:</strong> @ViewBag.Solicitud</div>
                <div class="col-md-6"><strong>Confirmation:</strong> @ViewBag.Confirmacion</div>
                <div class="col-md-6"><strong>Delivery Date:</strong> @ViewBag.entrega</div>
                <div class="col-md-6"><strong>Chauffeur:</strong> @ViewBag.choffer</div>
                <div class="col-md-6"><strong>Origin:</strong> @ViewBag.origins</div>
                <div class="col-md-6"><strong>Destiny:</strong> @ViewBag.destination</div>
                <div class="col-md-12"><strong>Commentary:</strong> <span class="text-muted">@ViewBag.comment</span></div>
                <div class="col-md-6"><strong>Request Date:</strong> @ViewBag.date</div>
                <div class="col-md-6"><strong>Area:</strong> @ViewBag.Areas </div>
                <div class="col-md-6"><strong>Motion Reason Canceled:</strong> @ViewBag.ReasonMT </div>
                <div class="col-md-6"><strong>Requested by:</strong> @ViewBag.Request</div>

                <button id="exportPDF" class="btn btn-danger mb-3">
                    <i data-lucide="download"></i> Export to PDF
                </button>

            </div>
        </div>
    </div>

    <p style="text-align: center;">&nbsp;</p>

    <h4 class="mb-3"><i data-lucide="list"></i> Movement History </h4>
    <ul class="responsive-table">
        <li class="table-header" id="tableData">
            <div class="col col-10" style="font-size:13px">Movement Number</div>
            <div class="col col-11" style="font-size:13px">Current Process</div>
            <div class="col col-12" style="font-size:13px">End Date</div>
            <div class="col col-13" style="font-size:13px">Status</div>
            <div class="col col-14" style="font-size:13px">Comment</div>
            <div class="col col-15" style="font-size:13px">Date of Process</div>
        </li>

        @foreach (var person in ViewBag.Records)
        {
            <li class="table-row" id="tblCustomers" style="font-size: 12px; background-color: @(person.Status == "PENDIENTE" ? "#fff3cd" :
                  person.Status == "COMPLETADO" ? "#d1e7dd" : "white")">

                <div class="col col-10" data-label="Movement Number" style="font-size:12px">@person.Folio</div>
                <div class="col col-11" data-label="Current Process" style="font-size: 12px">@person.ProcessMovement</div>
                <div class="col col-12" data-label="End Date" style="font-size: 12px">@person.End_date</div>
                <div class="col col-13" data-label="Status" style="font-size: 12px">
                    <span style="font-size:13px" class="badge-status badge
                        @(person.Status == "PENDIENTE" ? "bg-warning text-dark" :
                          person.Status == "COMPLETADO" ? "bg-success" : "bg-secondary")">
                        @person.Status
                    </span>
                </div>
                <div class="col col-14" data-label="Comment" style="font-size:13px">@person.Comment</div>
                <div class="col col-15" data-label="Date of Process" style="font-size:13px">@person.Date_Process</div>
            </li>
        }
    </ul>
</div>

<script>
    lucide.createIcons();
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

<script>
    var datenow = new Date().toLocaleTimeString('en-US', { hour12: false, hour: '2-digit', minute: '2-digit', second: '2-digit' });
    document.getElementById("exportPDF").addEventListener("click", function () {
        const container = document.querySelector(".container"); // todo lo que está dentro de tu vista

        html2canvas(container, { scale: 2 }).then(canvas => {
            const imgData = canvas.toDataURL("image/png");
            const { jsPDF } = window.jspdf;
            const pdf = new jsPDF('p', 'mm', 'a4');

            // Calcular el tamaño en el PDF
            const pageWidth = pdf.internal.pageSize.getWidth();
            const pageHeight = pdf.internal.pageSize.getHeight();

            const imgWidth = pageWidth;
            const imgHeight = canvas.height * imgWidth / canvas.width;

            let position = 0;

            if (imgHeight < pageHeight) {
                pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
            } else {
                // Si la imagen es más alta que una página
                let heightLeft = imgHeight;
                while (heightLeft > 0) {
                    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
                    heightLeft -= pageHeight;
                    if (heightLeft > 0) {
                        pdf.addPage();
                        position = 0;
                    }
                }
            }

            pdf.save("Container Details " + datenow + ".pdf");
        });
    });
</script>